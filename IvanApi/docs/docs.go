// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "get": {
                "description": "login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "登录",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseResult"
                        }
                    }
                }
            }
        },
        "/ops/broadcast": {
            "put": {
                "description": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ops"
                ],
                "summary": "修改",
                "parameters": [
                    {
                        "description": "入参",
                        "name": "broadInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.BroadCastUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseResult"
                        }
                    }
                }
            },
            "post": {
                "description": "update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ops"
                ],
                "summary": "新增",
                "parameters": [
                    {
                        "description": "信息",
                        "name": "broadInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.BroadCastUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseResult"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ops"
                ],
                "summary": "删除",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseResult"
                        }
                    }
                }
            }
        },
        "/ops/getbroadcast": {
            "get": {
                "description": "get users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ops"
                ],
                "summary": "获取广播",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "游戏Id",
                        "name": "gameId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "游戏版本",
                        "name": "gameVersion",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pageIndex",
                        "name": "pageIndex",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PageResult"
                        }
                    }
                }
            }
        },
        "/oss/callback": {
            "post": {
                "description": "oss callback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "oss"
                ],
                "summary": "oss callback",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.OssForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/test": {
            "get": {
                "description": "test",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "test"
                ],
                "summary": "测试",
                "parameters": [
                    {
                        "type": "string",
                        "description": "验证头",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/test/second": {
            "get": {
                "description": "test2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "test"
                ],
                "summary": "测试2",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/test/third": {
            "get": {
                "description": "test3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "test"
                ],
                "summary": "测试3",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.BroadCastUpdateInput": {
            "type": "object",
            "properties": {
                "broadcastPosition": {
                    "type": "string"
                },
                "broadcastText": {
                    "type": "string"
                },
                "channelId": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "gameId": {
                    "type": "integer"
                },
                "gameVersion": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "partnerId": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "worldId": {
                    "type": "string"
                }
            }
        },
        "model.OssForm": {
            "type": "object",
            "properties": {
                "checksum": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                }
            }
        },
        "model.PageResult": {
            "type": "object",
            "properties": {
                "pageIndex": {
                    "description": "页签",
                    "type": "integer"
                },
                "pageSize": {
                    "description": "页码",
                    "type": "integer"
                },
                "result": {
                    "description": "结果"
                },
                "total": {
                    "description": "总条数",
                    "type": "integer"
                }
            }
        },
        "model.ResponseResult": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "状态",
                    "type": "integer"
                },
                "msg": {
                    "description": "消息",
                    "type": "string"
                },
                "result": {
                    "description": "结果"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "IvanApi Swagger",
	Description: "IvanApi Service",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
